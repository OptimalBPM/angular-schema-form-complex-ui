angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/complex-ui/angular-schema-form-complex-ui.html",'<div ng-class="{\'has-error\': hasError()}"><label ng-show="showTitle()">{{form.title}}</label><div ng-model="$$value$$" complex-ui-directive=""><ng-form name="controller.complexForm" sf-schema="controller.complexSchema" sf-form="controller.complexForm" sf-model="controller.complexModel" ng-submit="submitted(controller.complexForm)"></ng-form></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span><br><span ng-show="form.some_setting">The some setting-setting is true for the model at $$value$$!</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,o,r){o.addMapping("bootstrapDecorator","complex-ui","directives/decorators/bootstrap/complex-ui/angular-schema-form-complex-ui.html")}]);var ComplexUIController=function(){function e(e,o){var r=this;this.$scope=e,this.camelCase=function(e){return e.toLowerCase().replace(/[- ](.)/g,function(e,o){return o.toUpperCase()})},this.makeCamelCase=function(){var e=r.directiveScope.ngModel[r.directiveScope.ngModel.length-1];e.$modelValue&&e.$setViewValue(r.camelCase(e.$modelValue))},this.alertObj=function(e){window.alert(JSON.stringify(e))},console.log("Initiating the process controller"+e.toString()),e.controller=this,this.directiveScope=e}return e}();angular.module("schemaForm").directive("complexUiDirective",function(){return{require:["ngModel"],restrict:"A",scope:!1,controller:["$scope",ComplexUIController],link:function(e,o,r,t){e.controller.complexModel=t,e.controller.complexForm=[{key:"test1",title:"Inside",type:"string"},{type:"submit",style:"btn-info",title:"OK"}],e.controller.complexSchema={type:"object",title:"Complex UI test",properties:{test1:{type:"string",description:"When you edit this, the value will become automatically camelCase:d."}},required:["test1"]}}}});