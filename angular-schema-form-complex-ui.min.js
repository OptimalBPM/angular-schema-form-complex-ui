angular.module("schemaForm").run(["$templateCache",function(o){o.put("directives/decorators/bootstrap/complex-ui/angular-schema-form-complex-ui.html",'<div ng-class="{\'has-error\': hasError()}"><div ng-init="controller.complexModel=$$value$$" complex-ui-directive=""><div ng-if="form.options.showButton == true"><label>{{form.title}}</label>&nbsp;<button ng-click="controller.toggleModal()">{{form.options.buttonCaption}}</button><modal title="Login form" visible="showModal"><div name="controller.complexForm" sf-schema="controller.complexSchema" sf-form="controller.complexForm" sf-model="controller.complexModel"></div></modal></div><div ng-if="form.options.showButton != true"><label ng-show="showTitle()">{{form.title}}</label><div name="controller.complexForm" sf-schema="controller.complexSchema" sf-form="controller.complexForm" sf-model="controller.complexModel"></div></div></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span><br><span ng-show="form.some_setting">The some setting-setting is true for the model at $$value$$!</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(o,e,t){e.addMapping("bootstrapDecorator","complex-ui","directives/decorators/bootstrap/complex-ui/angular-schema-form-complex-ui.html")}]);var ComplexUIController=function(){function o(o,e){var t=this;this.$scope=o,this.camelCase=function(o){return o.toLowerCase().replace(/[- ](.)/g,function(o,e){return e.toUpperCase()})},this.makeCamelCase=function(){var o=t.directiveScope.ngModel[t.directiveScope.ngModel.length-1];o.$modelValue&&o.$setViewValue(t.camelCase(o.$modelValue))},this.alertObj=function(o){window.alert(JSON.stringify(o))},this.toggleModal=function(){this.directiveScope.showModal=!this.directiveScope.showModal},this.getDefinitions=function(){if(t.directiveScope.form.options){var o=t.directiveScope.form.options.definitionsCallback();t.complexForm=o.form,t.complexSchema=o.schema}},this.innerSubmit=function(o){t.directiveScope.$broadcast("schemaFormValidate"),console.log(t.complexModel)},console.log("Initiating the process controller"+o.toString()),o.controller=this,this.directiveScope=o}return o}();angular.module("schemaForm").directive("modal",function(){return{template:'<div class="modal fade"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" ng-click="controller.toggleModal()" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">{{ title }}</h4></div><div class="modal-body" ng-transclude></div></div></div></div>',restrict:"E",transclude:!0,replace:!0,scope:!0,link:function(o,e,t){o.title=t.title,o.$watch(t.visible,function(o){1==o?$(e).modal("show"):$(e).modal("hide")}),e.on("shown.bs.modal",function(){o.$apply(function(){o.$parent[t.visible]=!0})}),e.on("hidden.bs.modal",function(){o.$apply(function(){o.$parent[t.visible]=!1})})}}}),angular.module("schemaForm").directive("complexUiDirective",function(){return{require:[],restrict:"A",scope:!1,controller:["$scope",ComplexUIController],link:function(o,e,t,l){o.controller.getDefinitions()}}});