angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/complex-ui/angular-schema-form-complex-ui.html",'<div ng-class="{\'has-error\': hasError()}"><label ng-show="showTitle()">{{form.title}}</label><div ng-model="$$value$$" ng-init="controller.complexModel=$$value$$" complex-ui-directive=""><div name="controller.complexForm" sf-schema="controller.complexSchema" sf-form="controller.complexForm" sf-model="controller.complexModel"></div></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span><br><span ng-show="form.some_setting">The some setting-setting is true for the model at $$value$$!</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,o,r){o.addMapping("bootstrapDecorator","complex-ui","directives/decorators/bootstrap/complex-ui/angular-schema-form-complex-ui.html")}]);var ComplexUIController=function(){function e(e,o){var r=this;this.$scope=e,this.camelCase=function(e){return e.toLowerCase().replace(/[- ](.)/g,function(e,o){return o.toUpperCase()})},this.makeCamelCase=function(){var e=r.directiveScope.ngModel[r.directiveScope.ngModel.length-1];e.$modelValue&&e.$setViewValue(r.camelCase(e.$modelValue))},this.alertObj=function(e){window.alert(JSON.stringify(e))},this.getDefinitions=function(){if(r.directiveScope.form.options){var e=r.directiveScope.form.options.definitionsCallback();r.complexForm=e.form,r.complexSchema=e.schema}},this.innerSubmit=function(e){r.directiveScope.$broadcast("schemaFormValidate"),console.log(r.complexModel)},console.log("Initiating the process controller"+e.toString()),e.controller=this,this.directiveScope=e}return e}();angular.module("schemaForm").directive("complexUiDirective",function(){return{require:["ngModel"],restrict:"A",scope:!1,controller:["$scope",ComplexUIController],link:function(e,o,r,t){e.controller.getDefinitions()}}});